diff --git a/android/src/main/java/com/swmansion/rnscreens/InsetsObserverProxy.kt b/android/src/main/java/com/swmansion/rnscreens/InsetsObserverProxy.kt
index dd5468284ffaa9b6ee6fa687a9082d23c74a465c..4c4ff0f1f9ef0929b8a556972e72e77068c7fbda 100644
--- a/android/src/main/java/com/swmansion/rnscreens/InsetsObserverProxy.kt
+++ b/android/src/main/java/com/swmansion/rnscreens/InsetsObserverProxy.kt
@@ -4,9 +4,11 @@ import android.view.View
 import androidx.core.view.OnApplyWindowInsetsListener
 import androidx.core.view.ViewCompat
 import androidx.core.view.WindowInsetsCompat
+import com.facebook.react.bridge.LifecycleEventListener
+import com.facebook.react.bridge.ReactApplicationContext
 import java.lang.ref.WeakReference

-object InsetsObserverProxy : OnApplyWindowInsetsListener {
+object InsetsObserverProxy : OnApplyWindowInsetsListener, LifecycleEventListener {
     private val listeners: ArrayList<OnApplyWindowInsetsListener> = arrayListOf()
     private var eventSourceView: WeakReference<View> = WeakReference(null)

@@ -37,6 +39,25 @@ object InsetsObserverProxy : OnApplyWindowInsetsListener {
         return rollingInsets
     }

+    // Call this method to ensure that the observer proxy is
+    // unregistered when apps is destroyed or we change activity.
+    fun registerWithContext(context: ReactApplicationContext) {
+        context.addLifecycleEventListener(this)
+    }
+
+    override fun onHostResume() = Unit
+
+    override fun onHostPause() = Unit
+
+    override fun onHostDestroy() {
+        val observedView = getObservedView()
+        if (hasBeenRegistered && observedView != null) {
+            ViewCompat.setOnApplyWindowInsetsListener(observedView, null)
+            hasBeenRegistered = false
+            eventSourceView.clear()
+        }
+    }
+
     fun addOnApplyWindowInsetsListener(listener: OnApplyWindowInsetsListener) {
         listeners.add(listener)
     }
diff --git a/android/src/main/java/com/swmansion/rnscreens/RNScreensPackage.kt b/android/src/main/java/com/swmansion/rnscreens/RNScreensPackage.kt
index 84124dd8ed2cdef62007a9ed85b8ae8911a839ae..e0a0f01eb0d7f38be4e5c8ea47755bd0189762fe 100644
--- a/android/src/main/java/com/swmansion/rnscreens/RNScreensPackage.kt
+++ b/android/src/main/java/com/swmansion/rnscreens/RNScreensPackage.kt
@@ -29,6 +29,10 @@ class RNScreensPackage : TurboReactPackage() {
             screenDummyLayoutHelper = ScreenDummyLayoutHelper(reactContext)
         }

+        // Proxy needs to register for lifecycle events in order to unregister itself
+        // on activity restarts.
+        InsetsObserverProxy.registerWithContext(reactContext)
+
         return listOf<ViewManager<*, *>>(
             ScreenContainerViewManager(),
             ScreenViewManager(),
