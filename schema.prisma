generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["reactNative"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./app.db"
}

// Your data model

model Server {
  url      String    @id
  lastSync DateTime?
}

model Person {
  id          String
  url         String
  name        String?
  description String?
  imagePath   String?
  insertedAt  DateTime
  updatedAt   DateTime
  authors     Author[]
  narrators   Narrator[]

  @@id([id, url])
}

model Author {
  id          String
  url         String
  name        String?
  person      Person       @relation(fields: [personId, url], references: [id, url], onDelete: Cascade)
  personId    String
  insertedAt  DateTime
  updatedAt   DateTime
  bookAuthors BookAuthor[]

  @@id([id, url])
}

model Narrator {
  id         String
  url        String
  name       String?
  person     Person   @relation(fields: [personId, url], references: [id, url], onDelete: Cascade)
  personId   String
  insertedAt DateTime
  updatedAt  DateTime

  @@id([id, url])
}

model Book {
  id              String
  url             String
  title           String?
  published       DateTime?
  publishedFormat String?
  insertedAt      DateTime
  updatedAt       DateTime
  seriesBooks     SeriesBook[]
  bookAuthors     BookAuthor[]
  media           Media[]

  @@id([id, url])
}

model Series {
  id          String
  url         String
  name        String?
  insertedAt  DateTime
  updatedAt   DateTime
  seriesBooks SeriesBook[]

  @@id([id, url])
}

model SeriesBook {
  id         String
  url        String
  book       Book   @relation(fields: [bookId, url], references: [id, url], onDelete: Cascade)
  bookId     String
  series     Series @relation(fields: [seriesId, url], references: [id, url], onDelete: Cascade)
  seriesId   String
  bookNumber String

  @@id([id, url])
}

model BookAuthor {
  id       String
  url      String
  author   Author @relation(fields: [authorId, url], references: [id, url], onDelete: Cascade)
  authorId String
  book     Book   @relation(fields: [bookId, url], references: [id, url], onDelete: Cascade)
  bookId   String

  @@id([id, url])
}

model Media {
  id              String
  url             String
  book            Book      @relation(fields: [bookId, url], references: [id, url], onDelete: Cascade)
  bookId          String
  fullCast        Boolean
  status          String
  abridged        Boolean
  mpdPath         String?
  hlsPath         String?
  mp4Path         String?
  duration        String?
  published       DateTime?
  publishedFormat String?
  notes           String?
  imagePath       String?
  description     String?
  publisher       String?
  insertedAt      DateTime
  updatedAt       DateTime

  @@id([id, url])
}
